# -*- coding: utf-8 -*-
"""week09_02_problem.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QxF0qz5VZj6MkspVkYS2qF6eokctgUEi
"""

import numpy as np

class CoordArray:
    def __init__(self, N):
        np.random.seed(0)
        self.n = N
        self.array = np.random.randint(-10, 10, (self.n,2)) #### Your Code Here ####
        self.col_avg = None
        self.row_avg = None

    def mean(self, axis):
        #### Your Code Here ####
        if axis == 0:
            self.col_avg = self.array.mean(axis=0)
        elif axis == 1:
            self.row_avg = self.array.mean(axis=1)
        return self.row_avg, self.col_avg

    def sort(self):
        #### Your Code Here ####
        array_distance = np.sqrt(np.sum(self.array**2, axis=1))
        sorted_indices = np.argsort(array_distance)[::-1] # 내림차순
        sorted_array = self.array[sorted_indices]
        self.array = sorted_array
        return self.array

    def distance(self, x:int, y:int):
        #### Your Code Here ####
        array_distance = []
        for i in range(len(self.array)):
            array_distance.append(((abs(self.array[i][0]-x) **2)+(abs(self.array[i][1]-y) **2)) ** (1/2))
        coord = self.array[array_distance.index(max(array_distance))]
        dis = round(max(array_distance),2)
        return coord, dis



#### Do not edit here ####
# All the test should print True
CA5 = CoordArray(5)
CA10 = CoordArray(10)
CA5.mean(0)
CA5.mean(1)
CA10.mean(0)
CA10.mean(1)

print(CA5.col_avg[0]==-1.6)
print(CA5.col_avg[1]==-0.4)
print(CA5.row_avg[2]==-5.)
print(CA5.row_avg[3]==4.)
print(CA10.col_avg[0]==-1.4)
print(CA10.col_avg[1]==-0.7)
print(CA10.row_avg[2]== -5.)
print(CA10.row_avg[3]== 4.)

CA5.sort()
CA10.sort()

CA5.mean(0)
CA5.mean(1)
CA10.mean(0)
CA10.mean(1)

print(CA5.row_avg[2]==4.)
print(CA5.row_avg[3]==-5.) 
print(CA10.row_avg[2]== -6.5)
print(CA10.row_avg[3]== 4.)
print(CA5.array[4][1]==5)
print(CA10.array[8][0]==-4)

coord, dis = CA5.distance(5, 3)
print(np.all([coord,(-10, -7)], where=[[True, True]]))
print(dis==18.03)
coord, dis = CA10.distance(9,-2)
print(np.all([coord,(-10, -7)], where=[[True, True]]))
print(dis==19.65)