# -*- coding: utf-8 -*-
"""Recursion_problem1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PwaUvINRPpfVS1TlAF9FRZhjJoq9FEna
"""

def fib(n):
    #### Your Code ####
    a, b = 1, 1
    if n == 1 or n == 2:
        return [1]
    
    result = [0, []] 
    
    for i in range(1, n):
        a, b = b, a + b
    
    result[0] = a
    
    fib_list = [1, 1] 
    
    for i in range(2, n):
        next_fib = fib_list[-1] + fib_list[-2]
        fib_list.append(next_fib)
    fib_list = fib_list[::-1]
    
    result[1] = fib_list#[::-1]
    fib_list.insert(0, fib_list[1])
    
    return result

#### Do not edit here ####
p_result = "{}번째 피보나치 수는 {}이고 0번째부터 {}번째 피보나치 수를 각각 {}번 계산합니다."
for x in [5,10,15]:
    result = fib(x)
    print(p_result.format(x, result[0], x-1, result[1][:-1]))