# -*- coding: utf-8 -*-
"""bank_problem.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18RWvAiVjJTvU6rWV9gP6fGqpAHLVoV3S
"""

import numpy as np
import matplotlib.pyplot as plt

class Bank:
    def __init__(self):
        self.__name = '' #string
        self.__pw = '' #string
        self.__money = None #int
        self.__info = {} #dictionary
        self.__pattern = {} #dictionary
        self.loginStatus = False

    def register(self): # 계정 등록
        #### Your Code Here ####
        # 계정이 있는 사람의 경우 -> 확인 후, 초기화면으로 돌아가기
        
        # 계정이 없는 사람의 경우
        self.__name = str(input("등록할 이름을 입력하세요: "))
        self.__pw = input("비밀번호를 입력하세요: ")
        self.__money = 0

        if self.__name in self.__info :
            # 이미 있는 사용자
            print("이미 등록된 사용자입니다")
            #self.loginStatus == False
            return self.program()
        # 계정 저장

        # # info.txt 파일에 저장2
        # file = open("info.txt", "a")
        # information = str(self.__name) + " " + str(self.__pw) + " " + "0"
        # file.write(information)
        # file.close

        # dictionary에 저장
        self.__info[self.__name] = [self.__pw, self.__money]

        print(f"{self.__name}님 환영합니다!")
        self.loginStatus = True     
        self.__pattern[self.__name]=[]
        self.__money=self.__info[self.__name][1]
        return self.program()
        
    def login(self): # 계정 로그인

        #### Your Code Here ####
        self.__name = str(input("로그인할 이름을 입력하세요: "))
        self.__pw = input("비밀번호를 입력하세요: ")
        self.loginStatus = False
        # 있는 사용자이고 비밀번호 맞는 경우
        if self.__name in self.__info and self.__info[self.__name][0] == self.__pw:
            print(f"{self.__name}님 환영합니다!")
            self.loginStatus =True
            self.__pattern[self.__name]=[]
            self.__money=self.__info[self.__name][1]
            return self.program()
        # 있는 사용자인데 비밀번호가 틀린 경우
        elif self.__name in self.__info and self.__info[self.__name][0] != self.__pw:
            print("비밀번호가 틀렸습니다.")
            return self.program()
        # 사용자 이름이 존재하지 않을 때 -> 초기화면으로 돌아가기
        elif self.__name not in self.__info:
            print("존재하지 않는 계정입니다.")
            self.loginStatus =False
            #print(self.loginStatus)
            return self.program()

    def deposit(self): # 1 계좌 입금
        #### Your Code Here ####
        while True:
            deposit_money = int(input("입금할 금액을 입력하세요:"))
            #self.loginStatus =True
            self.__money += deposit_money
            print(f"남은 잔액은 {self.__money}입니다.")
            return self.program()

    def spend(self): # 2 소비
        #### Your Code Here ####
        while True:
            spend_money = int(input("출금할 금액을 입력하세요:"))
            self.__pattern[self.__name].append(spend_money) # 소비형태 패턴 추적 위해서 돈 넣기
            #self.loginStatus =True
            self.__money -= spend_money
            print(f"남은 잔액은 {self.__money}입니다.") 
            return self.program()           

    def s_pattern(self): # 3 소비 패턴 보기
        #### Your Code Here ####
        for i, s_pattern_list in enumerate(self.__pattern[self.__name]):
            plt.scatter(i, s_pattern_list)
        plt.show()
        return self.program()  

    def event(self): # 4 예금 이자 이벤트
        #### Your Code Here ####
        random_array = np.random.randint(0, 10, size=(2,3))
        liza = max(sum(random_array[0]), sum(random_array[1]))/3
        liza = 1+ liza / 100
        print(f"예상 금액: {liza*self.__money}")
        return self.program()  

    def program(self):
        #### Your Code Here ####
        # 가장 처음에 txt 파일에 있는 정보들을 info dictionary에 옮김

        file = open("info.txt", "r")
        lines = file.readlines()
        for line in lines:
            line_list = line.split(" ")
            self.__info[line_list[0]] = [line_list[1],int(line_list[2])]
        file.close()

        # 초기화면
        if not self.loginStatus: 
            while True:
                print("[초기화면] >>>0 을 누르면 종료됩니다<<<")
                print("1. 계정 등록 2. 로그인")
                choice = int(input("입력: "))
                if choice == 0:
                    break
                elif choice == 1:
                    self.register()
                elif choice == 2:
                    self.loginStatus = True
                    self.login()         
                
        elif self.loginStatus:
            while True:
                # txt 파일에 저장
                print("[메인화면]>>>0을 누르면 로그아웃됩니다<<<")
                print("1. 계좌 입금 2. 소비 3. 소비 패턴 보기 4. 예금이자 이벤트")
                self.__info[self.__name] = [self.__pw, self.__money]
                choice_2 = int(input("입력: "))
                if choice_2 == 1:
                    self.deposit()
                elif choice_2 == 2:
                    self.spend()
                elif choice_2 == 3:
                    self.s_pattern()
                elif choice_2 == 4:
                    self.event()
                elif choice_2 == 0:
                    break
        
        self.__info[self.__name][1] = self.__money
        with open("info.txt", "w") as f:
            for key, list in self.__info.items():
                f.write(f"{key} {list[0]} {list[1]}\n")
            
        quit(0)
b = Bank()

b.program()

